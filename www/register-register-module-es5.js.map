{"version":3,"sources":["webpack:///src/app/register/register.page.html","webpack:///src/app/register/register-routing.module.ts","webpack:///src/app/register/register.module.ts","webpack:///src/app/register/register.page.scss","webpack:///src/app/register/register.page.ts","webpack:///src/app/services/json.service.ts","webpack:///src/app/services/session.service.ts"],"names":["routes","path","component","RegisterPageRoutingModule","imports","forChild","exports","RegisterPageModule","declarations","RegisterPage","authSvc","router","jsonService","sessionService","email","password","name","lastname","code","degree","register","value","subscribe","data","response","setSessionLoggedIn","error","console","log","user","isVerified","isEmailVerified","redirectUser","navigate","selector","template","JsonService","http","endpoint_back","url","get","latitud","longitud","image","request","post","id_grade","grade_value","date","code_subject","subject","message","formData","s","getSessionLogged","put","providedIn","SessionService","isSessionLoggedIn","session","sessionLogged","localStorage","setItem","JSON","stringify","getItem","parse"],"mappings":"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","file":"register-register-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>Register User</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <form>\\r\\n    <ion-item lines=\\\"full\\\">\\r\\n      <ion-label position=\\\"floating\\\">Nombre</ion-label>\\r\\n      <ion-input type=\\\"text\\\" #name required></ion-input>\\r\\n    </ion-item>\\r\\n    <ion-item lines=\\\"full\\\">\\r\\n      <ion-label position=\\\"floating\\\">Apellido</ion-label>\\r\\n      <ion-input type=\\\"text\\\" #lastname required></ion-input>\\r\\n    </ion-item>\\r\\n    <ion-item lines=\\\"full\\\">\\r\\n      <ion-label position=\\\"floating\\\">Email</ion-label>\\r\\n      <ion-input type=\\\"text\\\" #email required></ion-input>\\r\\n    </ion-item>\\r\\n    <ion-item lines=\\\"full\\\">\\r\\n      <ion-label position=\\\"floating\\\">Password</ion-label>\\r\\n      <ion-input type=\\\"password\\\" #password required></ion-input>\\r\\n    </ion-item>\\r\\n    <ion-item lines=\\\"full\\\">\\r\\n      <ion-label position=\\\"floating\\\">Codigo</ion-label>\\r\\n      <ion-input type=\\\"password\\\" #code required></ion-input>\\r\\n    </ion-item>\\r\\n    <ion-item lines=\\\"full\\\">\\r\\n      <ion-label position=\\\"floating\\\">Carrera</ion-label>\\r\\n      <ion-input type=\\\"password\\\" #degree required></ion-input>\\r\\n    </ion-item>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <ion-button type=\\\"submit\\\" (click)=\\\"onRegister(email, password, name, lastname, code, degree)\\\" expand=\\\"block\\\">Register</ion-button>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </form>\\r\\n  <ion-row>\\r\\n    <ion-col>\\r\\n      <p>\\r\\n        <a routerLink=\\\"/login\\\">Already have an account? </a>\\r\\n      </p>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n</ion-content>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegisterPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RegisterPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RegisterPageRoutingModule } from './register-routing.module';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RegisterPageRoutingModule\r\n  ],\r\n  declarations: [RegisterPage]\r\n})\r\nexport class RegisterPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from './../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { JsonService } from '../services/json.service';\r\nimport { Session } from '../model/session.model';\r\nimport { SessionService } from '../services/session.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.page.html',\r\n  styleUrls: ['./register.page.scss'],\r\n})\r\nexport class RegisterPage implements OnInit {\r\n  constructor(private authSvc: AuthService, private router: Router, private jsonService : JsonService, private sessionService: SessionService) {}\r\n  \r\n  ngOnInit(): void {\r\n\r\n  }\r\n  \r\n\r\n  async onRegister(email, password, name, lastname, code, degree) {\r\n   /*  let request = {\r\n      email.value, password, name, lastname, code, degree\r\n    } */\r\n    try {\r\n     \r\n      this.jsonService.register(null, email.value,  password.value, name.value, lastname.value, code.value, degree.value).subscribe((data) => {\r\n        let response : Session;\r\n        response = data;\r\n        if (response != null) {\r\n          this.sessionService.setSessionLoggedIn(response);\r\n        }\r\n      })\r\n     } catch (error) {\r\n      console.log('Error', error);\r\n    }\r\n    try {\r\n      const user = await this.authSvc.register(email.value, password.value);\r\n      if (user) {\r\n        const isVerified = this.authSvc.isEmailVerified(user);\r\n        this.redirectUser(isVerified);\r\n      }\r\n    } catch (error) {\r\n      console.log('Error', error);\r\n    }\r\n  }\r\n\r\n  private redirectUser(isVerified: boolean): void {\r\n    if (isVerified) {\r\n      this.router.navigate(['admin']);\r\n    } else {\r\n      this.router.navigate(['verify-email']);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { SessionService } from './session.service';\r\nimport { Session } from '../model/session.model';\r\nimport { Observable } from 'rxjs';\r\nimport { Student } from '../model/student.model';\r\nimport { Subject } from '../model/subject.model';\r\nimport { User } from '../model/user.model';\r\nimport { Grade } from '../model/grade.model';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class JsonService {\r\n\r\n  constructor(private http: HttpClient, public sessionService: SessionService) { }\r\n\r\n  //  endpoint_back = \"http://localhost:3000\";\r\n  endpoint_back = \"https://bk-proyecto-notas.herokuapp.com\"\r\n\r\n  getJson(url: string) {\r\n    return this.http.get(url);\r\n  }\r\n\r\n  login(latitud, longitud, email, password, image): Observable<User> {\r\n    var request = { latitud, longitud, email, password, image}\r\n    console.log(request);\r\n    return this.http.post<User>(this.endpoint_back + \"/perfil/usuario/signin\", request);\r\n  }\r\n\r\n  uploadGrade(id_grade, grade_value, name, date, code, code_subject): Observable<any> {\r\n    var request = { id_grade, grade_value, name, date }\r\n    console.log(request);\r\n    return this.http.post<any>(this.endpoint_back + \"/student/grade/\" + code + \"/\" + code_subject, request);\r\n  }\r\n\r\n  getStudentsBySubject(subject): Observable<Student[]> {\r\n    return this.http.get<Student[]>(this.endpoint_back + \"/course/students/\" + subject);\r\n  }\r\n\r\n  getGradesBySubject(subject, code): Observable<Grade[]> {\r\n    return this.http.get<Grade[]>(this.endpoint_back + \"/student/grade/\" + code + \"/\" + subject);\r\n  }\r\n\r\n  getAverageByStudent(code): Observable<any> {\r\n    return this.http.get<any>(this.endpoint_back + \"/student/grade/average/\" + code);\r\n  }\r\n\r\n  getAverageSubjectsByStudent(code): Observable<any> {\r\n    return this.http.get<any>(this.endpoint_back + \"/student/list/average/grade/\" + code);\r\n  }\r\n\r\n  getSubjectsByTeacher(code): Observable<Subject[]> {\r\n    return this.http.get<Subject[]>(this.endpoint_back + \"/perfil/subjects/\" + code);\r\n  }\r\n\r\n  sendMail(email, subject, message): Observable<string> {\r\n    var request = { email, subject, message };\r\n    return this.http.post<string>(this.endpoint_back + \"/perfil/sendEMail/\", request);\r\n  }\r\n\r\n  postJson(url: string, formData) {\r\n\r\n    if (url == null) {\r\n      url = this.endpoint_back;\r\n    }\r\n\r\n    let s: Session = this.sessionService.getSessionLogged();\r\n    return this.http.post(url, formData);\r\n  }\r\n\r\n  register(url: string, email, password, name, lastname, code, degree): Observable<Session> {\r\n    let request = {\r\n      email, password, name, lastname, code, degree\r\n    }\r\n    if (url == null) {\r\n      url = this.endpoint_back;\r\n    }\r\n\r\n    return this.http.post<Session>(url, request);\r\n  }\r\n  update(url: string, email, password, name, lastname, code, degree): Observable<Session> {\r\n    let request = {\r\n      email, password, name, lastname, code, degree\r\n    }\r\n    if (url == null) {\r\n      url = this.endpoint_back;\r\n    }\r\n\r\n    return this.http.put<Session>(url, request);\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Session } from '../model/session.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SessionService {\r\n  private isSessionLoggedIn: boolean;\r\n  public sessionLogged: Session;\r\n\r\n  constructor() {\r\n  this.isSessionLoggedIn = false;\r\n  }\r\n\r\n  setSessionLoggedIn(session: Session) {\r\n    this.isSessionLoggedIn = true;\r\n    this.sessionLogged = session;\r\n    localStorage.setItem('currentSession', JSON.stringify(session));\r\n  }\r\n  setSessionLoggedOut() {\r\n    const s: Session = null;\r\n    localStorage.setItem('currentSession', JSON.stringify(s));\r\n  }\r\n\r\n  getSessionLogged() {\r\n    if (localStorage.getItem('currentSession')) {\r\n    return JSON.parse(localStorage.getItem('currentSession'));\r\n    }\r\n    return null;\r\n  }\r\n}\r\n"]}