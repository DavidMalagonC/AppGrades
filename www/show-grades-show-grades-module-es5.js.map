{"version":3,"sources":["webpack:///src/app/show-grades/show-grades.page.html","webpack:///src/app/services/json.service.ts","webpack:///src/app/services/session.service.ts","webpack:///src/app/show-grades/show-grades-routing.module.ts","webpack:///src/app/show-grades/show-grades.module.ts","webpack:///src/app/show-grades/show-grades.page.scss","webpack:///src/app/show-grades/show-grades.page.ts"],"names":["JsonService","http","sessionService","endpoint_back","url","get","latitud","longitud","email","password","image","request","console","log","post","id_grade","grade_value","name","date","code","code_subject","subject","message","formData","s","getSessionLogged","lastname","degree","put","providedIn","SessionService","isSessionLoggedIn","session","sessionLogged","localStorage","setItem","JSON","stringify","getItem","parse","routes","path","component","ShowGradesPageRoutingModule","imports","forChild","exports","ShowGradesPageModule","declarations","ShowGradesPage","jsonService","router","getGradesBySubject","parseUrl","queryParams","user","subscribe","data","grades","error","selector","template"],"mappings":"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","file":"show-grades-show-grades-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-title>\\r\\n      <p>{{subject}}\\r\\n        <app-nav-menu style=\\\"align-content: right; float: right;\\\"></app-nav-menu>\\r\\n      </p>\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <div class=\\\"center2\\\">\\r\\n    <ion-card *ngFor=\\\"let grade of grades\\\">\\r\\n      <ion-item class=\\\"ion-activated\\\">\\r\\n        <ion-icon name=\\\"wifi\\\" slot=\\\"start\\\"></ion-icon>\\r\\n        <ion-label>{{grade.name}}: {{grade.grade_value}}</ion-label>\\r\\n      </ion-item>\\r\\n    </ion-card>\\r\\n  </div>\\r\\n</ion-content>\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { SessionService } from './session.service';\r\nimport { Session } from '../model/session.model';\r\nimport { Observable } from 'rxjs';\r\nimport { Student } from '../model/student.model';\r\nimport { Subject } from '../model/subject.model';\r\nimport { User } from '../model/user.model';\r\nimport { Grade } from '../model/grade.model';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class JsonService {\r\n\r\n  constructor(private http: HttpClient, public sessionService: SessionService) { }\r\n\r\n  //  endpoint_back = \"http://localhost:3000\";\r\n  endpoint_back = \"https://bk-proyecto-notas.herokuapp.com\"\r\n\r\n  getJson(url: string) {\r\n    return this.http.get(url);\r\n  }\r\n\r\n  login(latitud, longitud, email, password, image): Observable<User> {\r\n    var request = { latitud, longitud, email, password, image}\r\n    console.log(request);\r\n    return this.http.post<User>(this.endpoint_back + \"/perfil/usuario/signin\", request);\r\n  }\r\n\r\n  uploadGrade(id_grade, grade_value, name, date, code, code_subject): Observable<any> {\r\n    var request = { id_grade, grade_value, name, date }\r\n    console.log(request);\r\n    return this.http.post<any>(this.endpoint_back + \"/student/grade/\" + code + \"/\" + code_subject, request);\r\n  }\r\n\r\n  getStudentsBySubject(subject): Observable<Student[]> {\r\n    return this.http.get<Student[]>(this.endpoint_back + \"/course/students/\" + subject);\r\n  }\r\n\r\n  getGradesBySubject(subject, code): Observable<Grade[]> {\r\n    return this.http.get<Grade[]>(this.endpoint_back + \"/student/grade/\" + code + \"/\" + subject);\r\n  }\r\n\r\n  getAverageByStudent(code): Observable<any> {\r\n    return this.http.get<any>(this.endpoint_back + \"/student/grade/average/\" + code);\r\n  }\r\n\r\n  getAverageSubjectsByStudent(code): Observable<any> {\r\n    return this.http.get<any>(this.endpoint_back + \"/student/list/average/grade/\" + code);\r\n  }\r\n\r\n  getSubjectsByTeacher(code): Observable<Subject[]> {\r\n    return this.http.get<Subject[]>(this.endpoint_back + \"/perfil/subjects/\" + code);\r\n  }\r\n\r\n  sendMail(email, subject, message): Observable<string> {\r\n    var request = { email, subject, message };\r\n    return this.http.post<string>(this.endpoint_back + \"/perfil/sendEMail/\", request);\r\n  }\r\n\r\n  postJson(url: string, formData) {\r\n\r\n    if (url == null) {\r\n      url = this.endpoint_back;\r\n    }\r\n\r\n    let s: Session = this.sessionService.getSessionLogged();\r\n    return this.http.post(url, formData);\r\n  }\r\n\r\n  register(url: string, email, password, name, lastname, code, degree): Observable<Session> {\r\n    let request = {\r\n      email, password, name, lastname, code, degree\r\n    }\r\n    if (url == null) {\r\n      url = this.endpoint_back;\r\n    }\r\n\r\n    return this.http.post<Session>(url, request);\r\n  }\r\n  update(url: string, email, password, name, lastname, code, degree): Observable<Session> {\r\n    let request = {\r\n      email, password, name, lastname, code, degree\r\n    }\r\n    if (url == null) {\r\n      url = this.endpoint_back;\r\n    }\r\n\r\n    return this.http.put<Session>(url, request);\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Session } from '../model/session.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SessionService {\r\n  private isSessionLoggedIn: boolean;\r\n  public sessionLogged: Session;\r\n\r\n  constructor() {\r\n  this.isSessionLoggedIn = false;\r\n  }\r\n\r\n  setSessionLoggedIn(session: Session) {\r\n    this.isSessionLoggedIn = true;\r\n    this.sessionLogged = session;\r\n    localStorage.setItem('currentSession', JSON.stringify(session));\r\n  }\r\n  setSessionLoggedOut() {\r\n    const s: Session = null;\r\n    localStorage.setItem('currentSession', JSON.stringify(s));\r\n  }\r\n\r\n  getSessionLogged() {\r\n    if (localStorage.getItem('currentSession')) {\r\n    return JSON.parse(localStorage.getItem('currentSession'));\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ShowGradesPage } from './show-grades.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ShowGradesPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ShowGradesPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ShowGradesPageRoutingModule } from './show-grades-routing.module';\r\n\r\nimport { ShowGradesPage } from './show-grades.page';\r\nimport { NavMenuComponent } from \"../nav-menu/nav-menu.component\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ShowGradesPageRoutingModule\r\n  ],\r\n  declarations: [ShowGradesPage, NavMenuComponent]\r\n})\r\nexport class ShowGradesPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Nob3ctZ3JhZGVzL3Nob3ctZ3JhZGVzLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Grade } from '../model/grade.model';\r\nimport { Session } from '../model/session.model';\r\nimport { JsonService } from '../services/json.service';\r\nimport { SessionService } from '../services/session.service';\r\n\r\n@Component({\r\n  selector: 'app-show-grades',\r\n  templateUrl: './show-grades.page.html',\r\n  styleUrls: ['./show-grades.page.scss'],\r\n})\r\nexport class ShowGradesPage implements OnInit {\r\n\r\n  constructor(private sessionService: SessionService, private jsonService: JsonService,\r\n    private router: Router) { }\r\n\r\n   subject;\r\n\r\n   session: Session;\r\n\r\n   grades: Grade[];\r\n\r\n  ngOnInit() {\r\n    this.session = this.sessionService.getSessionLogged();\r\n    this.getGradesBySubject();\r\n  }\r\n\r\n  getGradesBySubject() {\r\n    var url = this.router.parseUrl(this.router.url);\r\n\r\n    this.subject = url.queryParams['subject'];\r\n    try {\r\n      this.jsonService.getGradesBySubject(url.queryParams['subjectCode'], this.session.user.code).subscribe((data) => {\r\n        this.grades = data;\r\n      });\r\n    } catch (error) {\r\n      console.log('Error->', error);\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n"]}