{"version":3,"sources":["./src/app/show-grades/show-grades.page.html","./src/app/services/json.service.ts","./src/app/services/session.service.ts","./src/app/show-grades/show-grades-routing.module.ts","./src/app/show-grades/show-grades.module.ts","./src/app/show-grades/show-grades.page.scss","./src/app/show-grades/show-grades.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,mJAAoF,SAAS,uDAAuD,cAAc,+TAA+T,YAAY,IAAI,mBAAmB,mFAAmF,E;;;;;;;;;;;;;;;;;;;ACA3jB;AACO;AAEC;AAanD,IAAa,WAAW,GAAxB,MAAa,WAAW;IAEtB,YAAoB,IAAgB,EAAS,cAA8B;QAAvD,SAAI,GAAJ,IAAI,CAAY;QAAS,mBAAc,GAAd,cAAc,CAAgB;QAE3E,4CAA4C;QAC5C,kBAAa,GAAG,yCAAyC;IAHsB,CAAC;IAKhF,OAAO,CAAC,GAAW;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC5B,CAAC;IAED,KAAK,CAAC,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK;QAC7C,IAAI,OAAO,GAAG,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAC;QAC1D,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,IAAI,CAAC,aAAa,GAAG,wBAAwB,EAAE,OAAO,CAAC,CAAC;IACtF,CAAC;IAED,WAAW,CAAC,QAAQ,EAAE,WAAW,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,YAAY;QAC/D,IAAI,OAAO,GAAG,EAAE,QAAQ,EAAE,WAAW,EAAE,IAAI,EAAE,IAAI,EAAE;QACnD,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,aAAa,GAAG,iBAAiB,GAAG,IAAI,GAAG,GAAG,GAAG,YAAY,EAAE,OAAO,CAAC,CAAC;IAC1G,CAAC;IAED,oBAAoB,CAAC,OAAO;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,IAAI,CAAC,aAAa,GAAG,mBAAmB,GAAG,OAAO,CAAC,CAAC;IACtF,CAAC;IAED,kBAAkB,CAAC,OAAO,EAAE,IAAI;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,aAAa,GAAG,iBAAiB,GAAG,IAAI,GAAG,GAAG,GAAG,OAAO,CAAC,CAAC;IAC/F,CAAC;IAED,mBAAmB,CAAC,IAAI;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,aAAa,GAAG,yBAAyB,GAAG,IAAI,CAAC,CAAC;IACnF,CAAC;IAED,2BAA2B,CAAC,IAAI;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,aAAa,GAAG,8BAA8B,GAAG,IAAI,CAAC,CAAC;IACxF,CAAC;IAED,oBAAoB,CAAC,IAAI;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,IAAI,CAAC,aAAa,GAAG,mBAAmB,GAAG,IAAI,CAAC,CAAC;IACnF,CAAC;IAED,QAAQ,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO;QAC9B,IAAI,OAAO,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;QAC1C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAS,IAAI,CAAC,aAAa,GAAG,oBAAoB,EAAE,OAAO,CAAC,CAAC;IACpF,CAAC;IAED,QAAQ,CAAC,GAAW,EAAE,QAAQ;QAE5B,IAAI,GAAG,IAAI,IAAI,EAAE;YACf,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC;SAC1B;QAED,IAAI,CAAC,GAAY,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC;QACxD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IACvC,CAAC;IAED,QAAQ,CAAC,GAAW,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM;QACjE,IAAI,OAAO,GAAG;YACZ,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM;SAC9C;QACD,IAAI,GAAG,IAAI,IAAI,EAAE;YACf,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC;SAC1B;QAED,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAU,GAAG,EAAE,OAAO,CAAC,CAAC;IAC/C,CAAC;IACD,MAAM,CAAC,GAAW,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM;QAC/D,IAAI,OAAO,GAAG;YACZ,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM;SAC9C;QACD,IAAI,GAAG,IAAI,IAAI,EAAE;YACf,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC;SAC1B;QAED,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,GAAG,EAAE,OAAO,CAAC,CAAC;IAC9C,CAAC;CACF;;YA5E2B,+DAAU;YAAyB,+DAAc;;AAFhE,WAAW;IAJvB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GAEW,WAAW,CA8EvB;AA9EuB;;;;;;;;;;;;;;;;;;AChBmB;AAM3C,IAAa,cAAc,GAA3B,MAAa,cAAc;IAIzB;QACA,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;IAC/B,CAAC;IAED,kBAAkB,CAAC,OAAgB;QACjC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC;QAC7B,YAAY,CAAC,OAAO,CAAC,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;IAClE,CAAC;IACD,mBAAmB;QACjB,MAAM,CAAC,GAAY,IAAI,CAAC;QACxB,YAAY,CAAC,OAAO,CAAC,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5D,CAAC;IAED,gBAAgB;QACd,IAAI,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC,EAAE;YAC5C,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC;SACzD;QACD,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AAxBY,cAAc;IAH1B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,cAAc,CAwB1B;AAxB0B;;;;;;;;;;;;;;;;;;;;ACNc;AACc;AAEH;AAEpD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,gEAAc;KAC1B;CACF,CAAC;AAMF,IAAa,2BAA2B,GAAxC,MAAa,2BAA2B;CAAG;AAA9B,2BAA2B;IAJvC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,2BAA2B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AChBC;AACM;AACF;AAEA;AAE8B;AAEvB;AACc;AAWlE,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;CAAG;AAAvB,oBAAoB;IAThC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,uFAA2B;SAC5B;QACD,YAAY,EAAE,CAAC,gEAAc,EAAE,6EAAgB,CAAC;KACjD,CAAC;GACW,oBAAoB,CAAG;AAAH;;;;;;;;;;;;;ACpBjC;AAAe,6GAA8C,mJAAmJ,E;;;;;;;;;;;;;;;;;;;;ACA9J;AACT;AAGc;AACM;AAO7D,IAAa,cAAc,GAA3B,MAAa,cAAc;IAEzB,YAAoB,cAA8B,EAAU,WAAwB,EAC1E,MAAc;QADJ,mBAAc,GAAd,cAAc,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAC1E,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAQ7B,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC;QACtD,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAED,kBAAkB;QAChB,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAEhD,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QAC1C,IAAI;YACF,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,GAAG,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;gBAC7G,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACrB,CAAC,CAAC,CAAC;SACJ;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;SAC/B;IAEH,CAAC;CAGF;;YA7BqC,wEAAc;YAAuB,kEAAW;YAClE,sDAAM;;AAHb,cAAc;IAL1B,+DAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,mOAAsC;;KAEvC,CAAC;GACW,cAAc,CA+B1B;AA/B0B","file":"show-grades-show-grades-module-es2015.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-title>\\r\\n      <p>{{subject}}\\r\\n        <app-nav-menu style=\\\"align-content: right; float: right;\\\"></app-nav-menu>\\r\\n      </p>\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <div class=\\\"center2\\\">\\r\\n    <ion-card *ngFor=\\\"let grade of grades\\\">\\r\\n      <ion-item class=\\\"ion-activated\\\">\\r\\n        <ion-icon name=\\\"wifi\\\" slot=\\\"start\\\"></ion-icon>\\r\\n        <ion-label>{{grade.name}}: {{grade.grade_value}}</ion-label>\\r\\n      </ion-item>\\r\\n    </ion-card>\\r\\n  </div>\\r\\n</ion-content>\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { SessionService } from './session.service';\r\nimport { Session } from '../model/session.model';\r\nimport { Observable } from 'rxjs';\r\nimport { Student } from '../model/student.model';\r\nimport { Subject } from '../model/subject.model';\r\nimport { User } from '../model/user.model';\r\nimport { Grade } from '../model/grade.model';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class JsonService {\r\n\r\n  constructor(private http: HttpClient, public sessionService: SessionService) { }\r\n\r\n  //  endpoint_back = \"http://localhost:3000\";\r\n  endpoint_back = \"https://bk-proyecto-notas.herokuapp.com\"\r\n\r\n  getJson(url: string) {\r\n    return this.http.get(url);\r\n  }\r\n\r\n  login(latitud, longitud, email, password, image): Observable<User> {\r\n    var request = { latitud, longitud, email, password, image}\r\n    console.log(request);\r\n    return this.http.post<User>(this.endpoint_back + \"/perfil/usuario/signin\", request);\r\n  }\r\n\r\n  uploadGrade(id_grade, grade_value, name, date, code, code_subject): Observable<any> {\r\n    var request = { id_grade, grade_value, name, date }\r\n    console.log(request);\r\n    return this.http.post<any>(this.endpoint_back + \"/student/grade/\" + code + \"/\" + code_subject, request);\r\n  }\r\n\r\n  getStudentsBySubject(subject): Observable<Student[]> {\r\n    return this.http.get<Student[]>(this.endpoint_back + \"/course/students/\" + subject);\r\n  }\r\n\r\n  getGradesBySubject(subject, code): Observable<Grade[]> {\r\n    return this.http.get<Grade[]>(this.endpoint_back + \"/student/grade/\" + code + \"/\" + subject);\r\n  }\r\n\r\n  getAverageByStudent(code): Observable<any> {\r\n    return this.http.get<any>(this.endpoint_back + \"/student/grade/average/\" + code);\r\n  }\r\n\r\n  getAverageSubjectsByStudent(code): Observable<any> {\r\n    return this.http.get<any>(this.endpoint_back + \"/student/list/average/grade/\" + code);\r\n  }\r\n\r\n  getSubjectsByTeacher(code): Observable<Subject[]> {\r\n    return this.http.get<Subject[]>(this.endpoint_back + \"/perfil/subjects/\" + code);\r\n  }\r\n\r\n  sendMail(email, subject, message): Observable<string> {\r\n    var request = { email, subject, message };\r\n    return this.http.post<string>(this.endpoint_back + \"/perfil/sendEMail/\", request);\r\n  }\r\n\r\n  postJson(url: string, formData) {\r\n\r\n    if (url == null) {\r\n      url = this.endpoint_back;\r\n    }\r\n\r\n    let s: Session = this.sessionService.getSessionLogged();\r\n    return this.http.post(url, formData);\r\n  }\r\n\r\n  register(url: string, email, password, name, lastname, code, degree): Observable<Session> {\r\n    let request = {\r\n      email, password, name, lastname, code, degree\r\n    }\r\n    if (url == null) {\r\n      url = this.endpoint_back;\r\n    }\r\n\r\n    return this.http.post<Session>(url, request);\r\n  }\r\n  update(url: string, email, password, name, lastname, code, degree): Observable<Session> {\r\n    let request = {\r\n      email, password, name, lastname, code, degree\r\n    }\r\n    if (url == null) {\r\n      url = this.endpoint_back;\r\n    }\r\n\r\n    return this.http.put<Session>(url, request);\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Session } from '../model/session.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SessionService {\r\n  private isSessionLoggedIn: boolean;\r\n  public sessionLogged: Session;\r\n\r\n  constructor() {\r\n  this.isSessionLoggedIn = false;\r\n  }\r\n\r\n  setSessionLoggedIn(session: Session) {\r\n    this.isSessionLoggedIn = true;\r\n    this.sessionLogged = session;\r\n    localStorage.setItem('currentSession', JSON.stringify(session));\r\n  }\r\n  setSessionLoggedOut() {\r\n    const s: Session = null;\r\n    localStorage.setItem('currentSession', JSON.stringify(s));\r\n  }\r\n\r\n  getSessionLogged() {\r\n    if (localStorage.getItem('currentSession')) {\r\n    return JSON.parse(localStorage.getItem('currentSession'));\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ShowGradesPage } from './show-grades.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ShowGradesPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ShowGradesPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ShowGradesPageRoutingModule } from './show-grades-routing.module';\r\n\r\nimport { ShowGradesPage } from './show-grades.page';\r\nimport { NavMenuComponent } from \"../nav-menu/nav-menu.component\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ShowGradesPageRoutingModule\r\n  ],\r\n  declarations: [ShowGradesPage, NavMenuComponent]\r\n})\r\nexport class ShowGradesPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Nob3ctZ3JhZGVzL3Nob3ctZ3JhZGVzLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Grade } from '../model/grade.model';\r\nimport { Session } from '../model/session.model';\r\nimport { JsonService } from '../services/json.service';\r\nimport { SessionService } from '../services/session.service';\r\n\r\n@Component({\r\n  selector: 'app-show-grades',\r\n  templateUrl: './show-grades.page.html',\r\n  styleUrls: ['./show-grades.page.scss'],\r\n})\r\nexport class ShowGradesPage implements OnInit {\r\n\r\n  constructor(private sessionService: SessionService, private jsonService: JsonService,\r\n    private router: Router) { }\r\n\r\n   subject;\r\n\r\n   session: Session;\r\n\r\n   grades: Grade[];\r\n\r\n  ngOnInit() {\r\n    this.session = this.sessionService.getSessionLogged();\r\n    this.getGradesBySubject();\r\n  }\r\n\r\n  getGradesBySubject() {\r\n    var url = this.router.parseUrl(this.router.url);\r\n\r\n    this.subject = url.queryParams['subject'];\r\n    try {\r\n      this.jsonService.getGradesBySubject(url.queryParams['subjectCode'], this.session.user.code).subscribe((data) => {\r\n        this.grades = data;\r\n      });\r\n    } catch (error) {\r\n      console.log('Error->', error);\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}