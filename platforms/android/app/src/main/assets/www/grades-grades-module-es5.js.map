{"version":3,"sources":["webpack:///src/app/grades/grades.page.html","webpack:///src/app/grades/grades-routing.module.ts","webpack:///src/app/grades/grades.module.ts","webpack:///src/app/grades/grades.page.scss","webpack:///src/app/grades/grades.page.ts","webpack:///src/app/services/json.service.ts","webpack:///src/app/services/session.service.ts"],"names":["routes","path","component","GradesPageRoutingModule","imports","forChild","exports","GradesPageModule","declarations","GradesPage","sessionService","jsonService","session","getSessionLogged","getSubjectsByTeacher","user","code","subscribe","data","subjects","subject","setSessionLoggedIn","error","console","log","selector","template","JsonService","http","endpoint_back","url","get","latitud","longitud","email","password","request","post","id_grade","grade_value","name","date","code_subject","message","formData","s","lastname","degree","put","providedIn","SessionService","isSessionLoggedIn","sessionLogged","localStorage","setItem","JSON","stringify","getItem","parse"],"mappings":"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","file":"grades-grades-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-title>Notas</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content *ngIf=\\\"session.user.id_rol == 2\\\">\\r\\n  <h2>&nbsp;&nbsp; Selecciona un curso:</h2>\\r\\n  <ion-card *ngFor=\\\"let subject of subjects\\\">\\r\\n    <ion-item routerLink=\\\"/upload-grades\\\"  [queryParams]=\\\"{ subject: subject.code_subject }\\\" class=\\\"ion-activated\\\">\\r\\n      <ion-icon name=\\\"wifi\\\" slot=\\\"start\\\"></ion-icon>\\r\\n      <ion-label>{{subject.name}}</ion-label>\\r\\n    </ion-item>\\r\\n  </ion-card>\\r\\n</ion-content>\\r\\n<ion-content *ngIf=\\\"session.user.id_rol == 1\\\">\\r\\n  <h1>Selecciona un curso:</h1>\\r\\n  <ion-card *ngFor=\\\"let subject of subjects\\\">\\r\\n    <ion-item routerLink=\\\"/show-grades\\\"  [queryParams]=\\\"{ subjectCode: subject.code_subject, subject: subject.name }\\\" class=\\\"ion-activated\\\">\\r\\n      <ion-icon name=\\\"wifi\\\" slot=\\\"start\\\"></ion-icon>\\r\\n      <ion-label>{{subject.name}}</ion-label>\\r\\n    </ion-item>\\r\\n  </ion-card>\\r\\n</ion-content>\\r\\n<app-nav-menu></app-nav-menu>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { GradesPage } from './grades.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: GradesPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class GradesPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { GradesPageRoutingModule } from './grades-routing.module';\r\n\r\nimport { GradesPage } from './grades.page';\r\nimport { NavMenuComponent } from \"../nav-menu/nav-menu.component\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    GradesPageRoutingModule,\r\n  ],\r\n  \r\n  declarations: [GradesPage, NavMenuComponent]\r\n})\r\nexport class GradesPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dyYWRlcy9ncmFkZXMucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { SessionService } from '../services/session.service';\r\nimport { Session } from '../model/session.model';\r\nimport { JsonService } from '../services/json.service';\r\nimport { Subject } from '../model/subject.model';\r\n\r\n@Component({\r\n  selector: 'app-grades',\r\n  templateUrl: './grades.page.html',\r\n  styleUrls: ['./grades.page.scss'],\r\n})\r\nexport class GradesPage implements OnInit {\r\n\r\n  constructor(private sessionService: SessionService, private jsonService: JsonService) { }\r\n\r\n  session : Session;\r\n  subjects: Subject[];\r\n  \r\n  ngOnInit() {\r\n    this.session = this.sessionService.getSessionLogged();\r\n    this.getSubjectsByTeacher(this.session.user.code);\r\n  }\r\n\r\n  getSubjectsByTeacher(code) {\r\n    try {\r\n      this.jsonService.getSubjectsByTeacher(code).subscribe((data) => {\r\n        this.subjects = data;\r\n        this.session.subject = this.subjects;\r\n        this.sessionService.setSessionLoggedIn(this.session);\r\n\r\n      });\r\n    } catch (error) {\r\n      console.log('Error->', error);\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { SessionService } from './session.service';\r\nimport { Session } from '../model/session.model';\r\nimport { Observable } from 'rxjs';\r\nimport { Student } from '../model/student.model';\r\nimport { Subject } from '../model/subject.model';\r\nimport { User } from '../model/user.model';\r\nimport { Grade } from '../model/grade.model';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class JsonService {\r\n\r\n  constructor(private http: HttpClient, public sessionService: SessionService) { }\r\n\r\n  //  endpoint_back = \"http://localhost:3000\";\r\n  endpoint_back = \"https://bk-proyecto-notas.herokuapp.com\"\r\n\r\n  getJson(url: string) {\r\n    return this.http.get(url);\r\n  }\r\n\r\n  login(latitud, longitud, email, password): Observable<User> {\r\n    var request = {latitud, longitud, email, password}\r\n    console.log(request);\r\n    return this.http.post<User>(this.endpoint_back + \"/perfil/usuario/signin\", request);\r\n  }\r\n\r\n  uploadGrade(id_grade, grade_value, name, date, code, code_subject ): Observable<any> {\r\n    var request = {id_grade, grade_value, name, date}\r\n    console.log(request);\r\n    return this.http.post<any>(this.endpoint_back + \"/student/grade/\"+code+\"/\"+code_subject, request);\r\n  }\r\n\r\n  getStudentsBySubject(subject): Observable<Student[]> {\r\n    return this.http.get<Student[] >(this.endpoint_back + \"/course/students/\"+subject);\r\n  }\r\n\r\n  getGradesBySubject(subject, code): Observable<Grade[]> {\r\n    return this.http.get<Grade[] >(this.endpoint_back + \"/student/grade/\"+code+\"/\"+subject);\r\n  }\r\n  \r\n  getSubjectsByTeacher(code): Observable<Subject[]> {\r\n    return this.http.get<Subject[]>(this.endpoint_back + \"/perfil/subjects/\"+code);\r\n  }\r\n\r\n  sendMail(email, subject, message): Observable<string>{\r\n    var request = {email, subject, message};\r\n    return this.http.post<string>(this.endpoint_back + \"/perfil/sendMail\", request);\r\n  }\r\n  \r\n  postJson(url: string, formData) {\r\n\r\n    if(url == null){\r\n      url = this.endpoint_back;\r\n    }\r\n    \r\n    let s: Session = this.sessionService.getSessionLogged();\r\n    return this.http.post(url, formData);\r\n  }\r\n\r\n  register(url: string, email, password, name, lastname, code, degree): Observable<Session> {\r\n    let request = {\r\n      email, password, name, lastname, code, degree\r\n    } \r\n    if(url == null){\r\n      url = this.endpoint_back;\r\n    }\r\n    \r\n    return this.http.post<Session>(url, request);\r\n  }\r\n  update(url: string, email, password, name, lastname, code, degree): Observable<Session> {\r\n    let request = {\r\n      email, password, name, lastname, code, degree\r\n    } \r\n    if(url == null){\r\n      url = this.endpoint_back;\r\n    }\r\n    \r\n    return this.http.put<Session>(url, request);\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Session } from '../model/session.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SessionService {\r\n  private isSessionLoggedIn: boolean;\r\n  public sessionLogged: Session;\r\n\r\n  constructor() {\r\n  this.isSessionLoggedIn = false;\r\n  }\r\n\r\n  setSessionLoggedIn(session: Session) {\r\n    this.isSessionLoggedIn = true;\r\n    this.sessionLogged = session;\r\n    localStorage.setItem('currentSession', JSON.stringify(session));\r\n  }\r\n  setSessionLoggedOut() {\r\n    const s: Session = null;\r\n    localStorage.setItem('currentSession', JSON.stringify(s));\r\n  }\r\n\r\n  getSessionLogged() {\r\n    if (localStorage.getItem('currentSession')) {\r\n    return JSON.parse(localStorage.getItem('currentSession'));\r\n    }\r\n    return null;\r\n  }\r\n}\r\n"]}