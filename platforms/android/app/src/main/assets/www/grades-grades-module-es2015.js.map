{"version":3,"sources":["./src/app/grades/grades.page.html","./src/app/grades/grades-routing.module.ts","./src/app/grades/grades.module.ts","./src/app/grades/grades.page.scss","./src/app/grades/grades.page.ts","./src/app/services/json.service.ts","./src/app/services/session.service.ts"],"names":[],"mappings":"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","file":"grades-grades-module-es2015.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-title>Notas</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content *ngIf=\\\"session.user.id_rol == 2\\\">\\r\\n  <h2>&nbsp;&nbsp; Selecciona un curso:</h2>\\r\\n  <ion-card *ngFor=\\\"let subject of subjects\\\">\\r\\n    <ion-item routerLink=\\\"/upload-grades\\\"  [queryParams]=\\\"{ subject: subject.code_subject }\\\" class=\\\"ion-activated\\\">\\r\\n      <ion-icon name=\\\"wifi\\\" slot=\\\"start\\\"></ion-icon>\\r\\n      <ion-label>{{subject.name}}</ion-label>\\r\\n    </ion-item>\\r\\n  </ion-card>\\r\\n</ion-content>\\r\\n<ion-content *ngIf=\\\"session.user.id_rol == 1\\\">\\r\\n  <h1>Selecciona un curso:</h1>\\r\\n  <ion-card *ngFor=\\\"let subject of subjects\\\">\\r\\n    <ion-item routerLink=\\\"/show-grades\\\"  [queryParams]=\\\"{ subjectCode: subject.code_subject, subject: subject.name }\\\" class=\\\"ion-activated\\\">\\r\\n      <ion-icon name=\\\"wifi\\\" slot=\\\"start\\\"></ion-icon>\\r\\n      <ion-label>{{subject.name}}</ion-label>\\r\\n    </ion-item>\\r\\n  </ion-card>\\r\\n</ion-content>\\r\\n<app-nav-menu></app-nav-menu>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { GradesPage } from './grades.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: GradesPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class GradesPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { GradesPageRoutingModule } from './grades-routing.module';\r\n\r\nimport { GradesPage } from './grades.page';\r\nimport { NavMenuComponent } from \"../nav-menu/nav-menu.component\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    GradesPageRoutingModule,\r\n  ],\r\n  \r\n  declarations: [GradesPage, NavMenuComponent]\r\n})\r\nexport class GradesPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dyYWRlcy9ncmFkZXMucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { SessionService } from '../services/session.service';\r\nimport { Session } from '../model/session.model';\r\nimport { JsonService } from '../services/json.service';\r\nimport { Subject } from '../model/subject.model';\r\n\r\n@Component({\r\n  selector: 'app-grades',\r\n  templateUrl: './grades.page.html',\r\n  styleUrls: ['./grades.page.scss'],\r\n})\r\nexport class GradesPage implements OnInit {\r\n\r\n  constructor(private sessionService: SessionService, private jsonService: JsonService) { }\r\n\r\n  session : Session;\r\n  subjects: Subject[];\r\n  \r\n  ngOnInit() {\r\n    this.session = this.sessionService.getSessionLogged();\r\n    this.getSubjectsByTeacher(this.session.user.code);\r\n  }\r\n\r\n  getSubjectsByTeacher(code) {\r\n    try {\r\n      this.jsonService.getSubjectsByTeacher(code).subscribe((data) => {\r\n        this.subjects = data;\r\n        this.session.subject = this.subjects;\r\n        this.sessionService.setSessionLoggedIn(this.session);\r\n\r\n      });\r\n    } catch (error) {\r\n      console.log('Error->', error);\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { SessionService } from './session.service';\r\nimport { Session } from '../model/session.model';\r\nimport { Observable } from 'rxjs';\r\nimport { Student } from '../model/student.model';\r\nimport { Subject } from '../model/subject.model';\r\nimport { User } from '../model/user.model';\r\nimport { Grade } from '../model/grade.model';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class JsonService {\r\n\r\n  constructor(private http: HttpClient, public sessionService: SessionService) { }\r\n\r\n  //  endpoint_back = \"http://localhost:3000\";\r\n  endpoint_back = \"https://bk-proyecto-notas.herokuapp.com\"\r\n\r\n  getJson(url: string) {\r\n    return this.http.get(url);\r\n  }\r\n\r\n  login(latitud, longitud, email, password): Observable<User> {\r\n    var request = {latitud, longitud, email, password}\r\n    console.log(request);\r\n    return this.http.post<User>(this.endpoint_back + \"/perfil/usuario/signin\", request);\r\n  }\r\n\r\n  uploadGrade(id_grade, grade_value, name, date, code, code_subject ): Observable<any> {\r\n    var request = {id_grade, grade_value, name, date}\r\n    console.log(request);\r\n    return this.http.post<any>(this.endpoint_back + \"/student/grade/\"+code+\"/\"+code_subject, request);\r\n  }\r\n\r\n  getStudentsBySubject(subject): Observable<Student[]> {\r\n    return this.http.get<Student[] >(this.endpoint_back + \"/course/students/\"+subject);\r\n  }\r\n\r\n  getGradesBySubject(subject, code): Observable<Grade[]> {\r\n    return this.http.get<Grade[] >(this.endpoint_back + \"/student/grade/\"+code+\"/\"+subject);\r\n  }\r\n  \r\n  getSubjectsByTeacher(code): Observable<Subject[]> {\r\n    return this.http.get<Subject[]>(this.endpoint_back + \"/perfil/subjects/\"+code);\r\n  }\r\n\r\n  sendMail(email, subject, message): Observable<string>{\r\n    var request = {email, subject, message};\r\n    return this.http.post<string>(this.endpoint_back + \"/perfil/sendMail\", request);\r\n  }\r\n  \r\n  postJson(url: string, formData) {\r\n\r\n    if(url == null){\r\n      url = this.endpoint_back;\r\n    }\r\n    \r\n    let s: Session = this.sessionService.getSessionLogged();\r\n    return this.http.post(url, formData);\r\n  }\r\n\r\n  register(url: string, email, password, name, lastname, code, degree): Observable<Session> {\r\n    let request = {\r\n      email, password, name, lastname, code, degree\r\n    } \r\n    if(url == null){\r\n      url = this.endpoint_back;\r\n    }\r\n    \r\n    return this.http.post<Session>(url, request);\r\n  }\r\n  update(url: string, email, password, name, lastname, code, degree): Observable<Session> {\r\n    let request = {\r\n      email, password, name, lastname, code, degree\r\n    } \r\n    if(url == null){\r\n      url = this.endpoint_back;\r\n    }\r\n    \r\n    return this.http.put<Session>(url, request);\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Session } from '../model/session.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SessionService {\r\n  private isSessionLoggedIn: boolean;\r\n  public sessionLogged: Session;\r\n\r\n  constructor() {\r\n  this.isSessionLoggedIn = false;\r\n  }\r\n\r\n  setSessionLoggedIn(session: Session) {\r\n    this.isSessionLoggedIn = true;\r\n    this.sessionLogged = session;\r\n    localStorage.setItem('currentSession', JSON.stringify(session));\r\n  }\r\n  setSessionLoggedOut() {\r\n    const s: Session = null;\r\n    localStorage.setItem('currentSession', JSON.stringify(s));\r\n  }\r\n\r\n  getSessionLogged() {\r\n    if (localStorage.getItem('currentSession')) {\r\n    return JSON.parse(localStorage.getItem('currentSession'));\r\n    }\r\n    return null;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}