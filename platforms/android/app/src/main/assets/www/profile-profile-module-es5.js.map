{"version":3,"sources":["webpack:///src/app/profile/profile.page.html","webpack:///src/app/update-profile/update-profile.component.html","webpack:///src/app/profile/profile-routing.module.ts","webpack:///src/app/profile/profile.module.ts","webpack:///src/app/profile/profile.page.scss","webpack:///src/app/profile/profile.page.ts","webpack:///src/app/services/json.service.ts","webpack:///src/app/services/session.service.ts","webpack:///src/app/update-profile/update-profile.component.scss","webpack:///src/app/update-profile/update-profile.component.ts"],"names":["routes","path","component","ProfilePageRoutingModule","imports","forChild","exports","ProfilePageModule","declarations","ProfilePage","modalController","routerOutlet","sessionService","session","getSessionLogged","create","cssClass","swipeToClose","presentingElement","nativeEl","modal","present","dismiss","selector","template","JsonService","http","endpoint_back","url","get","latitud","longitud","email","password","request","console","log","post","id_grade","grade_value","name","date","code","code_subject","subject","message","formData","s","lastname","degree","put","providedIn","SessionService","isSessionLoggedIn","sessionLogged","localStorage","setItem","JSON","stringify","getItem","parse","UpdateProfileComponent","modalCtrl","jsonService","response","value","carreer","setSessionLoggedIn","update","subscribe","data","error"],"mappings":"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","file":"profile-profile-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-title>Perfil</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <div style=\\\"height: 85%;\\\">\\r\\n    <ion-card>\\r\\n      <ion-card-header>\\r\\n        <ion-card-subtitle>Estudiante</ion-card-subtitle>\\r\\n        <ion-card-title>{{session.user.name}} {{session.user.lastname}}</ion-card-title>\\r\\n        <br />\\r\\n        <img src=\\\"../../assets/img/perfil.webp\\\" width=\\\"70%\\\" class=\\\"center\\\" />\\r\\n      </ion-card-header>\\r\\n    </ion-card>\\r\\n\\r\\n    <ion-button (click)=\\\"presentModal()\\\" class=\\\"center\\\">Datos Personales</ion-button>\\r\\n    <ion-card>\\r\\n      <ion-item href=\\\"#\\\" class=\\\"ion-activated\\\">\\r\\n        <ion-icon name=\\\"wifi\\\" slot=\\\"start\\\"></ion-icon>\\r\\n        <ion-label>{{session.user.degree}}</ion-label>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item href=\\\"#\\\">\\r\\n        <ion-icon name=\\\"wine\\\" slot=\\\"start\\\"></ion-icon>\\r\\n        <ion-label>{{session.user.code}}</ion-label>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item class=\\\"ion-activated\\\">\\r\\n        <ion-icon name=\\\"warning\\\" slot=\\\"start\\\"></ion-icon>\\r\\n        <ion-label>{{session.user.email}}</ion-label>\\r\\n      </ion-item>\\r\\n    </ion-card>\\r\\n    <ion-card>\\r\\n    </ion-card>\\r\\n  </div>\\r\\n  <app-nav-menu></app-nav-menu>\\r\\n</ion-content>\";","export default \"<ion-header translucent>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-title>Datos personales</ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-button onclick=\\\"dismissModal()\\\">Close</ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <form>\\r\\n    <ion-item lines=\\\"full\\\">\\r\\n      <ion-label position=\\\"floating\\\" >Nombre</ion-label>\\r\\n      <ion-input type=\\\"text\\\" #name required value={{session.user.name}}></ion-input>\\r\\n    </ion-item>\\r\\n    <ion-item lines=\\\"full\\\">\\r\\n      <ion-label position=\\\"floating\\\">Apellido</ion-label>\\r\\n      <ion-input type=\\\"text\\\" #lastname required value={{session.user.lastname}}></ion-input>\\r\\n    </ion-item>\\r\\n    <ion-item lines=\\\"full\\\">\\r\\n      <ion-label position=\\\"floating\\\">Email</ion-label>\\r\\n      <ion-input type=\\\"text\\\" #email required value={{session.user.email}}></ion-input>\\r\\n    </ion-item>\\r\\n    <ion-item lines=\\\"full\\\">\\r\\n      <ion-label position=\\\"floating\\\">Password</ion-label>\\r\\n      <ion-input type=\\\"password\\\" #password required value={{session.user.password}}></ion-input>\\r\\n    </ion-item>\\r\\n    <ion-item lines=\\\"full\\\">\\r\\n      <ion-label position=\\\"floating\\\">Codigo</ion-label>\\r\\n      <ion-input type=\\\"password\\\" #code required value={{session.user.code}}></ion-input>\\r\\n    </ion-item>\\r\\n    <ion-item lines=\\\"full\\\">\\r\\n      <ion-label position=\\\"floating\\\">Carrera</ion-label>\\r\\n      <ion-input type=\\\"password\\\" #degree required value={{session.user.degree}}></ion-input>\\r\\n    </ion-item>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <ion-button type=\\\"submit\\\" (click)=\\\"update(email, password, name, lastname, code, degree)\\\" expand=\\\"block\\\">Update Data</ion-button>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </form>\\r\\n</ion-content>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ProfilePage } from './profile.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProfilePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ProfilePageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ProfilePageRoutingModule } from './profile-routing.module';\r\n\r\nimport { ProfilePage } from './profile.page';\r\nimport { NavMenuComponent } from '../nav-menu/nav-menu.component'\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ProfilePageRoutingModule\r\n  ],\r\n  exports: [NavMenuComponent],\r\n  declarations: [ProfilePage, NavMenuComponent]\r\n})\r\nexport class ProfilePageModule { }\r\n","export default \"/* Works - pass \\\"my-custom-class\\\" in cssClass to increase specificity */\\n.my-custom-class .modal-wrapper {\\n  background: #222;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZmlsZS9DOlxcVXNlcnNcXGRhdmlkLm1hbGFnb25cXG5vdGFzL3NyY1xcYXBwXFxwcm9maWxlXFxwcm9maWxlLnBhZ2Uuc2NzcyIsInNyYy9hcHAvcHJvZmlsZS9wcm9maWxlLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx1RUFBQTtBQUNBO0VBQ0ksZ0JBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvcHJvZmlsZS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBXb3JrcyAtIHBhc3MgXCJteS1jdXN0b20tY2xhc3NcIiBpbiBjc3NDbGFzcyB0byBpbmNyZWFzZSBzcGVjaWZpY2l0eSAqL1xyXG4ubXktY3VzdG9tLWNsYXNzIC5tb2RhbC13cmFwcGVyIHtcclxuICAgIGJhY2tncm91bmQ6ICMyMjI7XHJcbiAgfSIsIi8qIFdvcmtzIC0gcGFzcyBcIm15LWN1c3RvbS1jbGFzc1wiIGluIGNzc0NsYXNzIHRvIGluY3JlYXNlIHNwZWNpZmljaXR5ICovXG4ubXktY3VzdG9tLWNsYXNzIC5tb2RhbC13cmFwcGVyIHtcbiAgYmFja2dyb3VuZDogIzIyMjtcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { IonRouterOutlet, ModalController } from '@ionic/angular';\r\nimport { SessionService } from '../services/session.service';\r\nimport { Session } from '../model/session.model';\r\nimport { UpdateProfileComponent } from '../update-profile/update-profile.component';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.page.html',\r\n  styleUrls: ['./profile.page.scss'],\r\n})\r\nexport class ProfilePage implements OnInit {\r\n\r\n  constructor(public modalController: ModalController, private routerOutlet: IonRouterOutlet, private sessionService : SessionService) { }\r\n\r\n  session: Session;\r\n\r\n  ngOnInit() {\r\n    this.session = this.sessionService.getSessionLogged();\r\n  }\r\n\r\n  async presentModal() {\r\n    const modal = await this.modalController.create({\r\n      component: UpdateProfileComponent,\r\n      cssClass: 'my-custom-class',\r\n      swipeToClose: true,\r\n      presentingElement: this.routerOutlet.nativeEl\r\n    });\r\n    return await modal.present();\r\n  }\r\n\r\n  dismiss() {\r\n    // using the injected ModalController this page\r\n    // can \"dismiss\" itself and optionally pass back data\r\n    this.modalController.dismiss({\r\n      'dismissed': true\r\n    });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { SessionService } from './session.service';\r\nimport { Session } from '../model/session.model';\r\nimport { Observable } from 'rxjs';\r\nimport { Student } from '../model/student.model';\r\nimport { Subject } from '../model/subject.model';\r\nimport { User } from '../model/user.model';\r\nimport { Grade } from '../model/grade.model';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class JsonService {\r\n\r\n  constructor(private http: HttpClient, public sessionService: SessionService) { }\r\n\r\n  //  endpoint_back = \"http://localhost:3000\";\r\n  endpoint_back = \"https://bk-proyecto-notas.herokuapp.com\"\r\n\r\n  getJson(url: string) {\r\n    return this.http.get(url);\r\n  }\r\n\r\n  login(latitud, longitud, email, password): Observable<User> {\r\n    var request = {latitud, longitud, email, password}\r\n    console.log(request);\r\n    return this.http.post<User>(this.endpoint_back + \"/perfil/usuario/signin\", request);\r\n  }\r\n\r\n  uploadGrade(id_grade, grade_value, name, date, code, code_subject ): Observable<any> {\r\n    var request = {id_grade, grade_value, name, date}\r\n    console.log(request);\r\n    return this.http.post<any>(this.endpoint_back + \"/student/grade/\"+code+\"/\"+code_subject, request);\r\n  }\r\n\r\n  getStudentsBySubject(subject): Observable<Student[]> {\r\n    return this.http.get<Student[] >(this.endpoint_back + \"/course/students/\"+subject);\r\n  }\r\n\r\n  getGradesBySubject(subject, code): Observable<Grade[]> {\r\n    return this.http.get<Grade[] >(this.endpoint_back + \"/student/grade/\"+code+\"/\"+subject);\r\n  }\r\n  \r\n  getSubjectsByTeacher(code): Observable<Subject[]> {\r\n    return this.http.get<Subject[]>(this.endpoint_back + \"/perfil/subjects/\"+code);\r\n  }\r\n\r\n  sendMail(email, subject, message): Observable<string>{\r\n    var request = {email, subject, message};\r\n    return this.http.post<string>(this.endpoint_back + \"/perfil/sendMail\", request);\r\n  }\r\n  \r\n  postJson(url: string, formData) {\r\n\r\n    if(url == null){\r\n      url = this.endpoint_back;\r\n    }\r\n    \r\n    let s: Session = this.sessionService.getSessionLogged();\r\n    return this.http.post(url, formData);\r\n  }\r\n\r\n  register(url: string, email, password, name, lastname, code, degree): Observable<Session> {\r\n    let request = {\r\n      email, password, name, lastname, code, degree\r\n    } \r\n    if(url == null){\r\n      url = this.endpoint_back;\r\n    }\r\n    \r\n    return this.http.post<Session>(url, request);\r\n  }\r\n  update(url: string, email, password, name, lastname, code, degree): Observable<Session> {\r\n    let request = {\r\n      email, password, name, lastname, code, degree\r\n    } \r\n    if(url == null){\r\n      url = this.endpoint_back;\r\n    }\r\n    \r\n    return this.http.put<Session>(url, request);\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Session } from '../model/session.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SessionService {\r\n  private isSessionLoggedIn: boolean;\r\n  public sessionLogged: Session;\r\n\r\n  constructor() {\r\n  this.isSessionLoggedIn = false;\r\n  }\r\n\r\n  setSessionLoggedIn(session: Session) {\r\n    this.isSessionLoggedIn = true;\r\n    this.sessionLogged = session;\r\n    localStorage.setItem('currentSession', JSON.stringify(session));\r\n  }\r\n  setSessionLoggedOut() {\r\n    const s: Session = null;\r\n    localStorage.setItem('currentSession', JSON.stringify(s));\r\n  }\r\n\r\n  getSessionLogged() {\r\n    if (localStorage.getItem('currentSession')) {\r\n    return JSON.parse(localStorage.getItem('currentSession'));\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VwZGF0ZS1wcm9maWxlL3VwZGF0ZS1wcm9maWxlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { JsonService } from '../services/json.service';\r\nimport { SessionService } from '../services/session.service';\r\nimport { Session } from '../model/session.model';\r\n\r\n@Component({\r\n  selector: 'app-update-profile',\r\n  templateUrl: './update-profile.component.html',\r\n  styleUrls: ['./update-profile.component.scss'],\r\n})\r\nexport class UpdateProfileComponent implements OnInit {\r\n\r\n  session: Session;\r\n\r\n  ngOnInit() {\r\n    this.session = this.sessionService.getSessionLogged();\r\n  }\r\n\r\n  \r\n  constructor(public modalCtrl: ModalController, private jsonService: JsonService, private sessionService: SessionService) {}\r\n\r\n /*  dismiss() {\r\n    // using the injected ModalController this page\r\n    // can \"dismiss\" itself and optionally pass back data\r\n    this.modalCtrl.dismiss({\r\n      'dismissed': true\r\n    });\r\n  } */\r\n  update(email, password, name, lastname, code, degree){\r\n    try {\r\n      \r\n      let response;\r\n      response.name = name.value;\r\n      response.lastname = lastname.value;\r\n      response.password = password.value;\r\n      response.code = code.value;\r\n      response.carreer = degree.value;\r\n      response.email = email.value;\r\n      \r\n      if (response != null) {\r\n        this.sessionService.setSessionLoggedIn(response);\r\n      }\r\n\r\n      this.jsonService.update(null, email,  password, name, lastname, code, degree).subscribe((data) => {\r\n        response = data;\r\n      })\r\n\r\n     \r\n     } catch (error) {\r\n      console.log('Error', error);\r\n    }\r\n  \r\n  }\r\n\r\n\r\n\r\n}\r\n"]}